<phone:PhoneApplicationPage
    x:Class="WhoShouldIPlay.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DataContext="{d:DesignData SampleData/MainViewModelSampleData.xaml}"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait"  Orientation="Portrait"
    shell:SystemTray.IsVisible="True">

    <!--LayoutRoot is the root grid where all page content is placed-->
    <Grid x:Name="LayoutRoot" Background="Transparent">

        <!-- LOCALIZATION NOTE:
            To localize the displayed strings copy their values to appropriately named
            keys in the app's neutral language resource file (AppResources.resx) then
            replace the hard-coded text value between the attributes' quotation marks
            with the binding clause whose path points to that string name.

            For example:

                Text="{Binding Path=LocalizedResources.ApplicationTitle, Source={StaticResource LocalizedStrings}}"

            This binding points to the template's string resource named "ApplicationTitle".

            Adding supported languages in the Project Properties tab will create a
            new resx file per language that can carry the translated values of your
            UI strings. The binding in these examples will cause the value of the
            attributes to be drawn from the .resx file that matches the
            CurrentUICulture of the app at run time.
         -->

        <!--Pivot Control-->
        <phone:Pivot Title="Who Should I Play?" Margin="0,10,0,-10">
            <!--Pivot item one-->
            <phone:PivotItem Header="Pick me!"  Margin="10,29,14,-1">
                <StackPanel x:Name ="sp" Height="603" VerticalAlignment="Top" Width="456">
                    <Grid Height="186">
                        <TextBlock x:Name="ChampName" HorizontalAlignment="Left" Margin="79,34,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="279" FontSize="32"/>

                        <Button x:Name="Random" Content="Press to get Champion" HorizontalAlignment="Left" Margin="62,82,0,0" VerticalAlignment="Top" Height="94" Width="309" Background="{x:Null}"  Click="Random_Click"/>
                    </Grid>
                    <Grid Height="412">
                        <CheckBox x:Name="Marksman" Content="Marksman" HorizontalAlignment="Left" Margin="50,35,0,0" VerticalAlignment="Top"/>
                        <CheckBox x:Name="Top" Content="Top" HorizontalAlignment="Left" Margin="50,112,0,0" VerticalAlignment="Top"/>
                        <CheckBox x:Name="Support" Content="Support" HorizontalAlignment="Left" Margin="50,184,0,0" VerticalAlignment="Top"/>
                        <CheckBox x:Name="Mid" Content="Mid" HorizontalAlignment="Left" Margin="254,35,0,0" VerticalAlignment="Top"/>
                        <CheckBox x:Name="Jungle" Content="Jungle" HorizontalAlignment="Left" Margin="254,112,0,0" VerticalAlignment="Top"/>
                        <CheckBox x:Name="Tank" Content="Tank" HorizontalAlignment="Left" Margin="254,184,0,0" VerticalAlignment="Top"/>
                        <CheckBox x:Name="AP" Content="AP" HorizontalAlignment="Left" Margin="50,256,0,0" VerticalAlignment="Top"/>
                        <CheckBox x:Name="Fighter" Content="Fighter" HorizontalAlignment="Left" Margin="254,256,0,0" VerticalAlignment="Top"/>
                    </Grid>


                </StackPanel>
                <!--Double line list with text wrapping-->
            </phone:PivotItem>

            <!--Pivot item two-->
            <phone:PivotItem Header="Info">
                <TextBlock HorizontalAlignment="Left" Height="603" TextWrapping="Wrap" VerticalAlignment="Top" Width="456">
            		<Run Text="How to use:"/>
            		<LineBreak/>
            		<Run Text="Check a few boxes and hit the button and a champion name will be provided for you to play! Some example combinations would be :"/>
            		<LineBreak/>
            		<Run Text="Mid:AP=Anivia"/>
            		<LineBreak/>
            		<Run Text="Top:Tank=Renekton"/>
            		<LineBreak/>
            		<Run Text="More combinations will be added per user request and meta changes. If you select too many boxes it will prompt you to select less boxes."/>
            		<LineBreak/>
            		<Run/>
            		<LineBreak/>
            		<Run Text="Author Information:"/>
            		<LineBreak/>
            		<Run Text="Matt Boatman "/>
            		<LineBreak/>
            		<Run Text="Search for me in the store to find my other apps. I also have apps for the Windows Store. "/>
            		<LineBreak/>
            		<Run Text="Email me at matthewdboatman@gmail.com for suggestions and improvements to the application or leave the suggestion as a review and I will make the change as soon as possible."/>
                </TextBlock>
                <!--Double line list no text wrapping-->

            </phone:PivotItem>
        </phone:Pivot>

        <!--Uncomment to see an alignment grid to help ensure your controls are
            aligned on common boundaries.  The image has a top margin of -32px to
            account for the System Tray. Set this to 0 (or remove the margin altogether)
            if the System Tray is hidden.

            Before shipping remove this XAML and the image itself.-->
        <!--<Image Source="/Assets/AlignmentGrid.png" VerticalAlignment="Top" Height="800" Width="480" Margin="0,-32,0,0" Grid.Row="0" IsHitTestVisible="False" />-->
    </Grid>

</phone:PhoneApplicationPage>